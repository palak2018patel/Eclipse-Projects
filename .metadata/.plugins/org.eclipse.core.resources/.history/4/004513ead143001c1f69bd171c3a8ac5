package sfdc.tests;

import java.io.IOException;

import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.testng.Assert;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.BeforeTest;

import sfdc.pages.LoginPage;

public class Leads extends BaseTest {
	
	static LeadsPage leadsPage;

		//@Parameters("browser name")
		@BeforeSuite
		public void setUp(String browserName) throws Exception  {		
			//initializeLogging();		
			 driver= getDriver("chrome");
			 leadsPage = new LeadsPage(driver);			 
			 initializeReport();			
		}		
		//@Parameters("env name")
		@BeforeTest
		public void launchApp() throws IOException {		
			driver.get(dataUtil.readAccounts("prod.url"));
			WebElement userName =driver.findElement(By.name("username"));
			bu.waitForElement(userName,driver);
		}
		
		@BeforeMethod            ////////this will always execute then how will test cases be tested for forget pw or wrong pw??????? also change to refactor style
		public void loginToApp() {			
					Assert.assertTrue(loginPage.isLoginPageDisplayed());
					bu.isElementVisible(loginPage.eUserName);
					//test.log(Status.INFO,"Username entered");
					bu.sendText("palak@tekarch.com", loginPage.eUserName);	
					bu.isElementVisible(loginPage.ePassword);
					bu.sendText("salesforce@1", loginPage.ePassword);		
					bu.clickOnElement(loginPage.eLoginButton);					
		}	
		

}
